{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setReversedStatus","NONE","sortType","setSortType","goods","visibleGoods","LENGTH","sort","a","b","length","ALPHABET","localeCompare","reverse","getReorderedGoods","isResetVisible","className","type","cn","onClick","current","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,4EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAoCE,IAAME,EAAgB,WAC3B,MAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAmBC,EAAnB,KAEA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAnCD,SACLA,EACAF,EACAH,GAEA,IAAMM,EAAY,YAAOD,GAEzB,OAAQF,GACN,KAAKP,EAASW,OACZD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAChBD,EAAEE,OAASD,EAAEC,UAEf,MAEF,KAAKf,EAASgB,SACZN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAChBD,EAAEI,cAAcH,MAIpB,KAAKd,EAASM,MAKhB,OAAOF,EACHM,EAAaQ,UACbR,EAQUS,CAAkBlB,EAAiBM,EAAUH,GAarDgB,EAAiBhB,GAAcG,IAAaP,EAASM,KAE3D,OACE,sBAAKe,UAAU,sBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBAAkB,CAChB,WAAYhB,IAAaP,EAASgB,WAGtCQ,QArBoB,kBAAMhB,EAAYR,EAASgB,WAcjD,iCAYA,wBACEM,KAAK,SACLD,UAAWE,IACT,oBAAqB,CACnB,WAAYhB,IAAaP,EAASW,SAGtCa,QAnCsB,kBAAMhB,EAAYR,EAASW,SA4BnD,4BAYA,wBACEW,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CAAE,YAAanB,IAClDoB,QAvCmB,kBAAMnB,GAAkB,SAAAoB,GAAO,OAAMA,MAoC1D,qBAQCL,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QA9Ce,WACvBhB,EAAYR,EAASM,MACrBD,GAAkB,IAyCZ,sBAUJ,oBAAIgB,UAAU,OAAd,SACE,6BACGZ,EAAMiB,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,cCxHpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.60a7c663.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport cn from 'classnames';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => (\n        a.length - b.length\n      ));\n      break;\n\n    case SortType.ALPHABET:\n      visibleGoods.sort((a, b) => (\n        a.localeCompare(b)\n      ));\n      break;\n\n    case SortType.NONE:\n    default:\n      break;\n  }\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReversedStatus] = useState(false);\n\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const goods = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n  const handleLengthSortClick = () => setSortType(SortType.LENGTH);\n\n  const handleNameSortClick = () => setSortType(SortType.ALPHABET);\n\n  const handleReverseClick = () => setReversedStatus(current => (!current));\n\n  const handleResetClick = () => {\n    setSortType(SortType.NONE);\n    setReversedStatus(false);\n  };\n\n  const isResetVisible = isReversed || sortType !== SortType.NONE;\n\n  return (\n    <div className=\"section content box\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={handleNameSortClick}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={handleLengthSortClick}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', { 'is-light': !isReversed })}\n          onClick={handleReverseClick}\n        >\n          Reverse\n        </button>\n\n        {isResetVisible && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleResetClick}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul className=\"list\">\n        <ul>\n          {goods.map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}